(()=>{"use strict";var i=function(){function i(i){this.unlocked=!1,this.visible=!1,this.name=i.name,this.tooltip=i.tooltip,this.visibility=i.visibility,this.unlock=i.unlock,this.color=i.color,this.element=document.createElement("div"),this.element.classList.add("achievement"),this.element.style.setProperty("--primary-color","var(--color-".concat(this.color,"-0)")),this.element.style.setProperty("--secondary-color","var(--color-".concat(this.color,"-3)"));var t=document.createElement("div");t.classList.add("tooltip"),t.innerHTML=this.name.bold()+"<br>"+this.tooltip,this.element.appendChild(t)}return i.prototype.tick=function(){this.visible||!this.visibility()&&!this.unlock()||(this.visible=!0,this.element.classList.add("show")),!this.unlocked&&this.unlock()&&(this.unlocked=!0,this.element.classList.add("unlocked"))},i.prototype.attachElement=function(i){i.appendChild(this.element)},i}(),t=[[void 0,void 0,void 0,void 0,void 0,void 0,void 0],[void 0,void 0,void 0,void 0,void 0,void 0,void 0],[void 0,void 0,void 0,void 0,void 0,void 0,void 0],[void 0,void 0,void 0,void 0,void 0,void 0,void 0],[void 0,void 0,void 0,void 0,void 0,void 0,void 0]];for(var o in t)for(var e in t[o])t[o][e]=new i({name:"",tooltip:"",visibility:function(){return!1},unlock:function(){return!1},color:"blue"});t[0][2]=new i({name:"Time Waster",tooltip:"Do nothing for a certain amount of time.",visibility:function(){return!0},unlock:function(){return!1},color:"purple"}),t[0][3]=new i({name:"Getting Started",tooltip:"Start the game.",visibility:function(){return!0},unlock:function(){return!0},color:"green"});for(var n=document.querySelector(".content7"),l=0,r=t;l<r.length;l++){var d=r[l],v=document.createElement("div");v.classList.add("achrow");for(var c=0,s=d;c<s.length;c++){var a=s[c];null==a||a.attachElement(v)}null==n||n.appendChild(v)}setInterval((function(){for(var i=0,o=t;i<o.length;i++)for(var e=0,n=o[i];e<n.length;e++){var l=n[e];null==l||l.tick()}}),1e3/60)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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L3RhdS1sYXllcnMvLi9zcmMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEFjaGlldmVtZW50IHtcbiAgICBuYW1lOiBzdHJpbmdcbiAgICB0b29sdGlwOiBzdHJpbmdcbiAgICB2aXNpYmlsaXR5OiAoKSA9PiBib29sZWFuXG4gICAgdW5sb2NrOiAoKSA9PiBib29sZWFuXG4gICAgY29sb3I6IHN0cmluZ1xuXG4gICAgdW5sb2NrZWQ6IGJvb2xlYW4gPSBmYWxzZVxuICAgIHZpc2libGU6IGJvb2xlYW4gPSBmYWxzZVxuXG4gICAgZWxlbWVudDogSFRNTERpdkVsZW1lbnRcblxuICAgIGNvbnN0cnVjdG9yKGFyZ3M6IHtcbiAgICAgICAgbmFtZTogc3RyaW5nXG4gICAgICAgIHRvb2x0aXA6IHN0cmluZ1xuICAgICAgICB2aXNpYmlsaXR5OiAoKSA9PiBib29sZWFuXG4gICAgICAgIHVubG9jazogKCkgPT4gYm9vbGVhblxuICAgICAgICBjb2xvcjogc3RyaW5nXG4gICAgfSkge1xuICAgICAgICB0aGlzLm5hbWUgPSBhcmdzLm5hbWVcbiAgICAgICAgdGhpcy50b29sdGlwID0gYXJncy50b29sdGlwXG4gICAgICAgIHRoaXMudmlzaWJpbGl0eSA9IGFyZ3MudmlzaWJpbGl0eVxuICAgICAgICB0aGlzLnVubG9jayA9IGFyZ3MudW5sb2NrXG4gICAgICAgIHRoaXMuY29sb3IgPSBhcmdzLmNvbG9yXG5cblxuICAgICAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnYWNoaWV2ZW1lbnQnKVxuICAgICAgICAvLyBUT0RPIDogYWRkIGFjaCBpY29uXG5cbiAgICAgICAgdGhpcy5lbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KCctLXByaW1hcnktY29sb3InLGB2YXIoLS1jb2xvci0ke3RoaXMuY29sb3J9LTApYClcbiAgICAgICAgdGhpcy5lbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KCctLXNlY29uZGFyeS1jb2xvcicsYHZhcigtLWNvbG9yLSR7dGhpcy5jb2xvcn0tMylgKVxuXG4gICAgICAgIGNvbnN0IHRvb2x0aXBFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICAgICAgdG9vbHRpcEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgndG9vbHRpcCcpXG4gICAgICAgIHRvb2x0aXBFbGVtZW50LmlubmVySFRNTCA9IHRoaXMubmFtZS5ib2xkKCkgKyAnPGJyPicgKyB0aGlzLnRvb2x0aXBcbiAgICAgICAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKHRvb2x0aXBFbGVtZW50KVxuICAgIH1cblxuICAgIHRpY2soKSB7XG4gICAgICAgIGlmICghdGhpcy52aXNpYmxlICYmICh0aGlzLnZpc2liaWxpdHkoKSB8fCB0aGlzLnVubG9jaygpKSkgeyAvL3Nob3dzIHdoZW4gdW5sb2NrZWQgYXMgd2VsbCwganVzdCBpbiBjYXNlXG4gICAgICAgICAgICB0aGlzLnZpc2libGUgPSB0cnVlXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnc2hvdycpXG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLnVubG9ja2VkICYmIHRoaXMudW5sb2NrKCkpIHtcbiAgICAgICAgICAgIHRoaXMudW5sb2NrZWQgPSB0cnVlXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgndW5sb2NrZWQnKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgYXR0YWNoRWxlbWVudChwYXJlbnQ6IEhUTUxFbGVtZW50KSB7IHBhcmVudC5hcHBlbmRDaGlsZCh0aGlzLmVsZW1lbnQpIH1cbn0iLCJpbXBvcnQgRGVjaW1hbCBmcm9tICcuL21vZHVsZXMvYnJlYWtfZXRlcm5pdHkuanMnIC8vIHRvIHVzZSBsYXRlclxuaW1wb3J0IHsgQWNoaWV2ZW1lbnQgfSBmcm9tICcuL2NsYXNzZXMvYWNoaWV2ZW1lbnRzJ1xuXG4vL2FjaGlldmVtZW50c1xuXG5jb25zdCBhY2hpZXZlbWVudHM6IChBY2hpZXZlbWVudCB8IHVuZGVmaW5lZClbXVtdID0gW1xuICAgIFt1bmRlZmluZWQsdW5kZWZpbmVkLHVuZGVmaW5lZCx1bmRlZmluZWQsdW5kZWZpbmVkLHVuZGVmaW5lZCx1bmRlZmluZWRdLFxuICAgIFt1bmRlZmluZWQsdW5kZWZpbmVkLHVuZGVmaW5lZCx1bmRlZmluZWQsdW5kZWZpbmVkLHVuZGVmaW5lZCx1bmRlZmluZWRdLFxuICAgIFt1bmRlZmluZWQsdW5kZWZpbmVkLHVuZGVmaW5lZCx1bmRlZmluZWQsdW5kZWZpbmVkLHVuZGVmaW5lZCx1bmRlZmluZWRdLFxuICAgIFt1bmRlZmluZWQsdW5kZWZpbmVkLHVuZGVmaW5lZCx1bmRlZmluZWQsdW5kZWZpbmVkLHVuZGVmaW5lZCx1bmRlZmluZWRdLFxuICAgIFt1bmRlZmluZWQsdW5kZWZpbmVkLHVuZGVmaW5lZCx1bmRlZmluZWQsdW5kZWZpbmVkLHVuZGVmaW5lZCx1bmRlZmluZWRdXG5dXG5cbmZvciAobGV0IGFjaFJvdyBpbiBhY2hpZXZlbWVudHMpIHtcbiAgICBmb3IgKGxldCBhY2hpZXZlbWVudCBpbiBhY2hpZXZlbWVudHNbYWNoUm93XSkge1xuICAgICAgICBhY2hpZXZlbWVudHNbYWNoUm93XVthY2hpZXZlbWVudF0gPSBuZXcgQWNoaWV2ZW1lbnQoe1xuICAgICAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgICAgIHRvb2x0aXA6IFwiXCIsXG4gICAgICAgICAgICB2aXNpYmlsaXR5OiAoKSA9PiBmYWxzZSxcbiAgICAgICAgICAgIHVubG9jazogKCkgPT4gZmFsc2UsXG4gICAgICAgICAgICBjb2xvcjogXCJibHVlXCJcbiAgICAgICAgfSlcbiAgICB9XG59XG5cbi8vcm93IDFcbiAgICBhY2hpZXZlbWVudHNbMF1bMl0gPSBuZXcgQWNoaWV2ZW1lbnQoe1xuICAgICAgICBuYW1lOiBcIlRpbWUgV2FzdGVyXCIsXG4gICAgICAgIHRvb2x0aXA6IFwiRG8gbm90aGluZyBmb3IgYSBjZXJ0YWluIGFtb3VudCBvZiB0aW1lLlwiLFxuICAgICAgICB2aXNpYmlsaXR5OiAoKSA9PiB0cnVlLFxuICAgICAgICB1bmxvY2s6ICgpID0+IGZhbHNlLFxuICAgICAgICBjb2xvcjogXCJwdXJwbGVcIlxuICAgIH0pXG4gICAgYWNoaWV2ZW1lbnRzWzBdWzNdID0gbmV3IEFjaGlldmVtZW50KHtcbiAgICAgICAgbmFtZTogXCJHZXR0aW5nIFN0YXJ0ZWRcIixcbiAgICAgICAgdG9vbHRpcDogXCJTdGFydCB0aGUgZ2FtZS5cIixcbiAgICAgICAgdmlzaWJpbGl0eTogKCkgPT4gdHJ1ZSxcbiAgICAgICAgdW5sb2NrOiAoKSA9PiB0cnVlLFxuICAgICAgICBjb2xvcjogXCJncmVlblwiXG4gICAgfSlcblxuY29uc3QgYWNoaWV2ZW1lbnRDb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRlbnQ3JylcblxuZm9yICh2YXIgYWNoUm93IG9mIGFjaGlldmVtZW50cykge1xuICAgIHZhciBhY2hSb3dFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICBhY2hSb3dFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2FjaHJvdycpXG4gICAgZm9yICh2YXIgYWNoaWV2ZW1lbnQgb2YgYWNoUm93KSB7XG4gICAgICAgIGFjaGlldmVtZW50Py5hdHRhY2hFbGVtZW50KGFjaFJvd0VsZW1lbnQpXG4gICAgfVxuICAgIGFjaGlldmVtZW50Q29udGVudD8uYXBwZW5kQ2hpbGQoYWNoUm93RWxlbWVudClcbn1cblxuc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgIGZvciAodmFyIGFjaFJvdyBvZiBhY2hpZXZlbWVudHMpIHtcbiAgICAgICAgZm9yICh2YXIgYWNoaWV2ZW1lbnQgb2YgYWNoUm93KSB7XG4gICAgICAgICAgICBhY2hpZXZlbWVudD8udGljaygpXG4gICAgICAgIH1cbiAgICB9XG59LCAxMDAwLzYwKSJdLCJuYW1lcyI6WyJhcmdzIiwidW5sb2NrZWQiLCJ2aXNpYmxlIiwidGhpcyIsIm5hbWUiLCJ0b29sdGlwIiwidmlzaWJpbGl0eSIsInVubG9jayIsImNvbG9yIiwiZWxlbWVudCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCIsInN0eWxlIiwic2V0UHJvcGVydHkiLCJ0b29sdGlwRWxlbWVudCIsImlubmVySFRNTCIsImJvbGQiLCJhcHBlbmRDaGlsZCIsInRpY2siLCJhdHRhY2hFbGVtZW50IiwicGFyZW50IiwiYWNoaWV2ZW1lbnRzIiwidW5kZWZpbmVkIiwiQWNoaWV2ZW1lbnQiLCJhY2hpZXZlbWVudENvbnRlbnQiLCJxdWVyeVNlbGVjdG9yIiwiYWNoUm93IiwiYWNoUm93RWxlbWVudCIsImFjaGlldmVtZW50Iiwic2V0SW50ZXJ2YWwiXSwic291cmNlUm9vdCI6IiJ9